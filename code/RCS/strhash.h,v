head	1.3;
access;
symbols;
locks;
comment	@ * @;


1.3
date	2014.03.06.03.24.07;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.02.22.01.49.36;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.11.17.02.05.22;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: strhash.h,v 1.2 2014-02-21 17:49:36-08 - - $

//
// NAME
//    strhash - return an unsigned 32-bit hash code for a string
//
// SYNOPSIS
//    size_t strhash (const char *string);
//

#ifndef __STRHASH_H__
#define __STRHASH_H__

#include <inttypes.h>

size_t strhash (const char *string);

#endif

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: strhash.h,v 1.1 2012-11-16 18:05:22-08 - - $
d8 1
a8 1
//    size_t strhash (char *string);
d16 1
a16 1
size_t strhash (char *string);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: strhash.h,v 1.1 2012-02-21 20:36:10-08 - - $
d8 1
a8 14
//    hashcode_t strhash (char *string);
//
// DESCRIPTION
//    Uses Horner's method to compute the hash code of a string
//    as is done by java.lang.String.hashCode:
//    .  s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]
//    Using strength reduction, the multiplication is replaced by
//    a shift.  However, instead of returning a signed number,
//    this function returns an unsigned number.
//
// REFERENCE
//    http://java.sun.com/j2se/1.4.1/docs/api/java/lang/
//    String.html#hashCode()
// 
d16 1
a16 3
typedef uint32_t hashcode_t;

hashcode_t strhash (char *string);
@
