head	1.12;
access;
symbols;
locks;
comment	@// @;


1.12
date	2013.08.07.19.52.21;	author -;	state -;
branches;
next	1.11;

1.11
date	2013.08.07.19.51.15;	author -;	state -;
branches;
next	1.10;

1.10
date	2013.08.07.19.50.11;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.08.07.19.49.44;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.08.07.19.48.36;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.08.07.19.48.17;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.08.07.19.45.10;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.08.07.19.44.43;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.08.07.19.44.20;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.08.07.19.42.54;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.08.07.19.42.35;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.08.07.19.40.21;	author -;	state -;
branches;
next	;


desc
@@


1.12
log
@-
@
text
@// $Id: str_hash++.cpp,v 1.11 2013-08-07 12:51:15-07 - - $

//
// This program is not part of your project.  It exists just to 
// illustrate how to obtain and print hash values.  Each element
// of argv is hashed and printed along with its hashcode.
//

#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <string>

using namespace std;

int main (int argc, char **argv) {
   size_t const width = 20;
   hash<string> str_hash;
   for (int argi = 0; argi < argc; ++argi) {
      string const str = argv[argi];
      size_t const hash_value = str_hash (str);
      cout << setw (width) << hash_value << " = hash(\"" << str
           << "\")" << endl;
   }
   size_t const max = numeric_limits<size_t>::max();
   cout << setw (width) << max
        << " = 0x" << hex << uppercase << max
        << " = " << nouppercase << (long double) (max) << endl;
   return EXIT_SUCCESS;
}

@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.10 2013-08-07 12:50:11-07 - - $
d21 3
a23 3
      string str = argv[argi];
      size_t hash_value = str_hash (str);
      cout << setw(width) << hash_value << " = hash(\"" << str
d27 1
a27 1
   cout << setw(width) << max
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.9 2013-08-07 12:49:44-07 - - $
d29 1
a29 1
        << " = " << (long double) (max) << endl;
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.8 2013-08-07 12:48:36-07 - - $
d27 3
a29 2
   cout << setw(width) << max << " = 0x"
        << hex << uppercase << max << " = " << (long double) (max)<< endl;
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.7 2013-08-07 12:48:17-07 - - $
d28 1
a28 2
        << hex << uppercase << max << endl;
   cout << "1.0 / max = " << 1.0 / max << endl;
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.6 2013-08-07 12:45:10-07 - - $
d29 1
a29 1
   cout << "1/max" << 1.0 / max << endl;
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.5 2013-08-07 12:44:43-07 - - $
d29 1
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.4 2013-08-07 12:44:20-07 - - $
d18 1
a18 1
   size_t const width = 16;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.3 2013-08-07 12:42:54-07 - - $
d18 1
a18 1
   size_t const width = 15;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: str_hash++.cpp,v 1.2 2013-08-07 12:42:35-07 - - $
d24 1
a24 1
           << ")" << endl;
d27 2
a28 1
   cout << setw(width) << max << " = 0x" << hex << max << endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hash++.cpp,v 1.1 2013-08-07 12:17:22-07 - - $
d26 1
a26 1
   size_t const max = numeric_limits<size_t>::max;
@


1.1
log
@-
@
text
@d21 2
a22 2
      string s = argv[argi];
      size_t hash_value = str_hash (s);
@
