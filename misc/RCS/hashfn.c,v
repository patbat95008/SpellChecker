head	1.10;
access;
symbols;
locks;
comment	@ * @;


1.10
date	2013.08.12.20.30.08;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.08.12.20.29.13;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.08.09.02.09.03;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.08.09.02.08.18;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.08.09.02.08.07;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.08.09.02.07.50;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.08.09.02.07.33;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.08.09.02.06.00;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.08.09.02.05.46;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.11.17.02.04.00;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@// $Id: hashfn.c,v 1.9 2013-08-12 13:29:13-07 - - $

//
// This program is not part of your project.  It exists just to 
// illustrate how to obtain and print hash values.  Each element
// of argv is hashed and printed along with its hashcode.
//

#include <stdio.h>
#include <stdlib.h>

#include "../code/strhash.h"

int main (int argc, char **argv) {
   for (int argi = 0; argi < argc; ++argi) {
      char *str = argv[argi];
      size_t hashcode = strhash (str);
      printf ("%20lu = strhash (\"%s\")\n", hashcode, str);
   }
   printf ("%20lu = 0xFFFFFFFFLU\n", 0xFFFFFFFFLU);
   printf ("%20lu = 0x%016lXLU\n", (size_t)-1L, (size_t)-1L);
   return EXIT_SUCCESS;
}

@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.8 2013-08-08 19:09:03-07 - - $
d21 1
a21 1
   printf ("%20lu = 0x%016lXL\n", (size_t)-1L, (size_t)-1L);
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.7 2013-08-08 19:08:18-07 - - $
d20 1
a20 1
   printf ("%20lu = 0xFFFFFFFFu\n", 0xFFFFFFFFu);
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.6 2013-08-08 19:08:07-07 - - $
d21 1
a21 1
   printf ("%20lu = 0x%016lX\n", (size_t)-1L, (size_t)-1L);
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.5 2013-08-08 19:07:50-07 - - $
d21 1
a21 1
   printf ("%20lu = 0x%016LX\n", (size_t)-1L, (size_t)-1L);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.4 2013-08-08 19:07:33-07 - - $
d21 1
a21 1
   printf ("%20lu = 0x%016Xlu\n", (size_t)-1L, (size_t)-1L);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.3 2013-08-08 19:06:00-07 - - $
d21 1
a21 1
   printf ("%20lu = 0x%016Xlu\n", (size_t)-1, (size_t)-1);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.2 2013-08-08 19:05:46-07 - - $
d18 1
a18 1
      printf ("%10lu = strhash (\"%s\")\n", hashcode, str);
d20 2
a21 1
   printf ("%10u = 0xFFFFFFFFu\n", 0xFFFFFFFFu);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.1 2012-11-16 18:04:00-08 - - $
d18 1
a18 1
      printf ("%10u = strhash (\"%s\")\n", hashcode, str);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: hashfn.c,v 1.2 2012-02-22 19:35:40-08 - - $
d17 1
a17 1
      hashcode_t hashcode = strhash (str);
@
